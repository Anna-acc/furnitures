// <auto-generated />
using System;
using FurnitureBy.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FurnitureBy.Data.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20220514191445_AddCategories")]
    partial class AddCategories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FurnitureBy.Data.Entities.Category", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsShow")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "967ED34D-3E98-4DEC-B108-A76561478E77",
                            Description = "",
                            IsShow = true,
                            Name = "Столы-транформеры",
                            ParentId = 4
                        },
                        new
                        {
                            Id = "08EA2E88-D576-4008-9070-EA21CC91067E",
                            Description = "",
                            IsShow = true,
                            Name = "Столы обеденные",
                            ParentId = 4
                        },
                        new
                        {
                            Id = "6351A626-BB4A-43DA-994A-3A9F5A9F7B0C",
                            Description = "",
                            IsShow = true,
                            Name = "Столы компьютерные",
                            ParentId = 4
                        },
                        new
                        {
                            Id = "DD6A604D-118F-4DE6-AA4B-F1EF9AEE3A1B",
                            Description = "",
                            IsShow = true,
                            Name = "Столы-книги",
                            ParentId = 4
                        },
                        new
                        {
                            Id = "7F2C5637-A686-44C2-BD52-B48ECE418CC4",
                            Description = "",
                            IsShow = true,
                            Name = "Столы журнальные",
                            ParentId = 4
                        },
                        new
                        {
                            Id = "0FFC296E-8DA3-415F-9EC1-2EF0C164A15F",
                            Description = "",
                            IsShow = true,
                            Name = "Столы для сада",
                            ParentId = 4
                        },
                        new
                        {
                            Id = "915AB52E-9E7B-4536-ACBB-AEB4CC4720D2",
                            Description = "",
                            IsShow = true,
                            Name = "Столы туалетные",
                            ParentId = 4
                        },
                        new
                        {
                            Id = "CE0EB21A-B1DD-41A7-8DDC-B44364A4BA3E",
                            Description = "",
                            IsShow = true,
                            Name = "Стулья обеденные",
                            ParentId = 5
                        },
                        new
                        {
                            Id = "47F4AC2C-68DA-4E17-A557-1C56630877CE",
                            Description = "",
                            IsShow = true,
                            Name = "Табуреты",
                            ParentId = 5
                        },
                        new
                        {
                            Id = "B09F0A09-0D6C-47BD-94E1-4C1BF0382C30",
                            Description = "",
                            IsShow = true,
                            Name = "Стулья компьютерные",
                            ParentId = 5
                        },
                        new
                        {
                            Id = "3D8BDA65-0354-45F1-AEFE-D8C8DF0E6CF8",
                            Description = "",
                            IsShow = true,
                            Name = "Барные стулья",
                            ParentId = 5
                        },
                        new
                        {
                            Id = "0C5549DB-2EE2-46F1-B0BC-3568FA1F9C32",
                            Description = "",
                            IsShow = true,
                            Name = "Подушка для стула",
                            ParentId = 5
                        },
                        new
                        {
                            Id = "F7B6F7DC-84EB-4D24-9CFD-E4FD27AA15EA",
                            Description = "",
                            IsShow = true,
                            Name = "Стулья для сада",
                            ParentId = 5
                        },
                        new
                        {
                            Id = "C2FDC337-1567-4B04-8827-E639725BB929",
                            Description = "",
                            IsShow = true,
                            Name = "Стулья классические",
                            ParentId = 5
                        },
                        new
                        {
                            Id = "5FD132AF-DF42-4D16-B099-8F639BE6B4AB",
                            Description = "",
                            IsShow = true,
                            Name = "2-местные",
                            ParentId = 1
                        },
                        new
                        {
                            Id = "3E095A2A-E65D-4889-B239-F95F7C8A8723",
                            Description = "",
                            IsShow = true,
                            Name = "1-местные",
                            ParentId = 1
                        },
                        new
                        {
                            Id = "7CDACD63-E07E-470D-B59A-3111C5B31CC3",
                            Description = "",
                            IsShow = true,
                            Name = "Детские",
                            ParentId = 1
                        },
                        new
                        {
                            Id = "C1627F62-7006-4993-8ACB-786F4321370F",
                            Description = "",
                            IsShow = true,
                            Name = "2-ярусные",
                            ParentId = 1
                        },
                        new
                        {
                            Id = "C1681BE4-9A9D-4C83-9ECC-44978186BDBF",
                            Description = "",
                            IsShow = true,
                            Name = "Угловые",
                            ParentId = 2
                        },
                        new
                        {
                            Id = "4451E155-8F35-483C-8A4A-2C15B8DCFD67",
                            Description = "",
                            IsShow = true,
                            Name = "Модульные",
                            ParentId = 2
                        },
                        new
                        {
                            Id = "C6FFCD65-2284-4778-9976-9A380BA22784",
                            Description = "",
                            IsShow = true,
                            Name = "Софы",
                            ParentId = 2
                        },
                        new
                        {
                            Id = "27B09768-FC8F-49C5-B298-EA6986B74FC6",
                            Description = "",
                            IsShow = true,
                            Name = "Кровати",
                            ParentId = 2
                        },
                        new
                        {
                            Id = "AB01742F-413A-420B-8D7C-416F31753AA2",
                            Description = "",
                            IsShow = true,
                            Name = "Купе",
                            ParentId = 3
                        },
                        new
                        {
                            Id = "EE175C2A-F427-4E33-B2A2-D202D7F8C831",
                            Description = "",
                            IsShow = true,
                            Name = "Для одежды",
                            ParentId = 3
                        },
                        new
                        {
                            Id = "99322F12-450D-488D-AFC2-E1EC06CFBC9D",
                            Description = "",
                            IsShow = true,
                            Name = "Кухонные",
                            ParentId = 3
                        },
                        new
                        {
                            Id = "CB0326CE-F5FB-42F3-8977-08383E9B5DAF",
                            Description = "",
                            IsShow = true,
                            Name = "Книжные",
                            ParentId = 3
                        });
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Order", b =>
                {
                    b.Property<string>("NumberOrder")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOrder")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("IdUser")
                        .HasColumnType("text");

                    b.Property<string>("NamePerson")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("NumberOrder");

                    b.HasIndex("IdUser");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.OrderProducts", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CodeProduct")
                        .HasColumnType("text");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("NumberOrder")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CodeProduct");

                    b.HasIndex("NumberOrder");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Product", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Gear")
                        .HasColumnType("text");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAvaible")
                        .HasColumnType("boolean");

                    b.Property<int?>("Length")
                        .HasColumnType("integer");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("Width")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.ProductCategories", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CategoryId")
                        .HasColumnType("text");

                    b.Property<string>("CodeProduct")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CodeProduct");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Администратор"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Модератор"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Клиент"
                        });
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "2F0D1327-8965-4D21-BC2E-3012348C8008",
                            DateBirth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsConfirm = true,
                            Login = "Admin",
                            Name = "Admin",
                            Password = "1111",
                            RoleId = 1,
                            Surname = "Admin"
                        });
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Order", b =>
                {
                    b.HasOne("FurnitureBy.Data.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.OrderProducts", b =>
                {
                    b.HasOne("FurnitureBy.Data.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("CodeProduct");

                    b.HasOne("FurnitureBy.Data.Entities.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("NumberOrder");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.ProductCategories", b =>
                {
                    b.HasOne("FurnitureBy.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.HasOne("FurnitureBy.Data.Entities.Product", "Product")
                        .WithMany("Categories")
                        .HasForeignKey("CodeProduct");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.User", b =>
                {
                    b.HasOne("FurnitureBy.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Product", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("FurnitureBy.Data.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
